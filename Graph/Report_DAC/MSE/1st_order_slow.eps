%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The MathWorks, Inc. Version 7.11.0.584 (R2010b). Operating System: Microsoft Windows XP.
%%Title: C:\Documents and Settings\yanghaitao\×ÀÃæ\MSE\1st_order_slow.eps
%%CreationDate: 03/30/2011  20:47:49
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:    84   240   508   601
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/ISOLatin1Encoding where {pop /WindowsLatin1Encoding 256 array bdef
ISOLatin1Encoding WindowsLatin1Encoding copy pop
/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger
/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/.notdef
/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis WindowsLatin1Encoding 128 32 getinterval astore pop}
{/WindowsLatin1Encoding StandardEncoding bdef} ifelse
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    84   240   508   601
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 1008 7212 csm

    0     0  5099  4331 rc
85 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 5100 4332 rf
6 w
0 3530 3952 0 0 -3530 663 3855 4 MP
PP
-3952 0 0 3530 3952 0 0 -3530 663 3855 5 MP stroke
4 w
DO
0 sg
 663 3855 mt  663  325 L
 663  325 mt  663  325 L
1453 3855 mt 1453  325 L
1453  325 mt 1453  325 L
2243 3855 mt 2243  325 L
2243  325 mt 2243  325 L
3034 3855 mt 3034  325 L
3034  325 mt 3034  325 L
3824 3855 mt 3824  325 L
3824  325 mt 3824  325 L
4615 3855 mt 4615  325 L
4615  325 mt 4615  325 L
 663 3855 mt 4615 3855 L
4615 3855 mt 4615 3855 L
 663 3266 mt 4615 3266 L
4615 3266 mt 4615 3266 L
 663 2678 mt 4615 2678 L
4615 2678 mt 4615 2678 L
 663 2090 mt 4615 2090 L
4615 2090 mt 4615 2090 L
 663 1501 mt 4615 1501 L
4615 1501 mt 4615 1501 L
 663  913 mt 4615  913 L
4615  913 mt 4615  913 L
 663  325 mt 4615  325 L
4615  325 mt 4615  325 L
SO
6 w
 663  325 mt 4615  325 L
 663 3855 mt 4615 3855 L
4615 3855 mt 4615  325 L
 663 3855 mt  663  325 L
 663 3855 mt 4615 3855 L
 663 3855 mt  663  325 L
 663 3855 mt  663 3815 L
 663  325 mt  663  364 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

 630 4000 mt 
(0) s
1453 3855 mt 1453 3815 L
1453  325 mt 1453  364 L
1387 4000 mt 
(10) s
2243 3855 mt 2243 3815 L
2243  325 mt 2243  364 L
2177 4000 mt 
(20) s
3034 3855 mt 3034 3815 L
3034  325 mt 3034  364 L
2968 4000 mt 
(30) s
3824 3855 mt 3824 3815 L
3824  325 mt 3824  364 L
3758 4000 mt 
(40) s
4615 3855 mt 4615 3815 L
4615  325 mt 4615  364 L
4549 4000 mt 
(50) s
 663 3855 mt  702 3855 L
4615 3855 mt 4575 3855 L
 492 3899 mt 
(-4) s
 663 3266 mt  702 3266 L
4615 3266 mt 4575 3266 L
 492 3310 mt 
(-2) s
 663 2678 mt  702 2678 L
4615 2678 mt 4575 2678 L
 562 2722 mt 
(0) s
 663 2090 mt  702 2090 L
4615 2090 mt 4575 2090 L
 562 2134 mt 
(2) s
 663 1501 mt  702 1501 L
4615 1501 mt 4575 1501 L
 562 1545 mt 
(4) s
 663  913 mt  702  913 L
4615  913 mt 4575  913 L
 562  957 mt 
(6) s
 663  325 mt  702  325 L
4615  325 mt 4575  325 L
 562  369 mt 
(8) s
 663  325 mt 4615  325 L
 663 3855 mt 4615 3855 L
4615 3855 mt 4615  325 L
 663 3855 mt  663  325 L
gs 663 325 3953 3531 rc
/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
1 0 80 -1 79 -1 79 -1 79 0 79 -1 79 -1 79 -2 
79 -1 79 -1 79 -1 79 -2 79 -2 79 -1 79 -2 79 -2 
79 -2 79 -3 79 -2 79 -3 79 -3 79 -3 79 -3 79 -3 
79 -3 79 -4 80 -4 79 -4 79 -4 79 -3 79 -4 79 -4 
79 -3 79 -2 79 -2 79 0 79 2 79 3 79 7 79 11 
79 17 79 23 79 34 79 45 79 62 79 82 79 111 79 149 
79 198 79 264 742 1485 51 MP stroke
/c9 { 0.000000 0.500000 0.000000 sr} bdef
c9
1 0 80 -1 79 -1 79 -1 79 -1 79 -1 79 -1 79 -1 
79 -1 79 -1 79 -2 79 -1 79 -2 79 -2 79 -2 79 -2 
79 -3 79 -2 79 -3 79 -3 79 -4 79 -3 79 -5 79 -4 
79 -5 79 -5 80 -6 79 -6 79 -7 79 -8 79 -8 79 -9 
79 -10 79 -11 79 -12 79 -13 79 -14 79 -16 79 -17 79 -18 
79 -20 79 -22 79 -23 79 -24 79 -25 79 -27 79 -27 79 -27 
79 -27 79 -27 742 2876 51 MP stroke
/c10 { 1.000000 0.000000 0.000000 sr} bdef
c10
1 0 80 0 79 0 79 0 79 0 79 1 79 0 79 0 
79 0 79 0 79 1 79 0 79 0 79 1 79 0 79 1 
79 0 79 0 79 1 79 1 79 0 79 1 79 1 79 0 
79 1 79 1 80 1 79 2 79 1 79 1 79 2 79 1 
79 2 79 2 79 2 79 1 79 2 79 1 79 0 79 -1 
79 -3 79 -6 79 -11 79 -19 79 -32 79 -50 79 -80 79 -125 
79 -193 79 -301 742 3198 51 MP stroke
/c11 { 0.000000 0.750000 0.750000 sr} bdef
c11
1 0 80 0 79 0 79 0 79 0 79 1 79 0 79 0 
79 0 79 0 79 1 79 0 79 0 79 0 79 1 79 0 
79 1 79 0 79 0 79 1 79 0 79 1 79 0 79 1 
79 0 79 1 80 0 79 1 79 0 79 0 79 0 79 0 
79 0 79 -1 79 -1 79 -2 79 -2 79 -4 79 -5 79 -7 
79 -10 79 -13 79 -18 79 -24 79 -32 79 -43 79 -58 79 -78 
79 -104 79 -139 742 2937 51 MP stroke
/c12 { 0.750000 0.000000 0.750000 sr} bdef
c12
1 0 80 0 79 1 79 1 79 0 79 1 79 1 79 1 
79 1 79 1 79 1 79 1 79 1 79 2 79 1 79 2 
79 1 79 2 79 2 79 3 79 2 79 2 79 3 79 3 
79 3 79 3 80 4 79 3 79 4 79 4 79 4 79 4 
79 3 79 4 79 2 79 2 79 0 79 -2 79 -5 79 -9 
79 -15 79 -22 79 -33 79 -48 79 -66 79 -90 79 -124 79 -167 
79 -223 79 -295 742 3426 51 MP stroke
/c13 { 0.750000 0.750000 0.000000 sr} bdef
c13
1 0 80 -1 79 0 79 -1 79 -1 79 0 79 -1 79 -1 
79 0 79 -1 79 -1 79 -1 79 -1 79 -2 79 -1 79 -2 
79 -1 79 -2 79 -2 79 -2 79 -2 79 -3 79 -2 79 -3 
79 -4 79 -3 80 -4 79 -5 79 -5 79 -6 79 -7 79 -8 
79 -9 79 -10 79 -13 79 -14 79 -17 79 -21 79 -25 79 -30 
79 -37 79 -45 79 -55 79 -67 79 -82 79 -101 79 -122 79 -148 
79 -177 79 -208 742 3666 51 MP stroke
0.25 sg
1 0 80 0 79 1 79 1 79 0 79 1 79 1 79 1 
79 1 79 1 79 1 79 1 79 1 79 2 79 1 79 2 
79 2 79 2 79 2 79 2 79 3 79 2 79 3 79 4 
79 3 79 4 80 5 79 5 79 5 79 6 79 7 79 9 
79 9 79 10 79 13 79 15 79 18 79 21 79 27 79 33 
79 41 79 52 79 66 79 85 79 111 79 145 79 190 79 252 
79 335 79 449 742 449 51 MP stroke
c8
1 0 80 0 79 1 79 1 79 0 79 1 79 1 79 1 
79 1 79 1 79 1 79 1 79 1 79 2 79 1 79 2 
79 2 79 2 79 2 79 2 79 2 79 3 79 3 79 3 
79 4 79 4 80 4 79 4 79 5 79 6 79 6 79 7 
79 8 79 9 79 10 79 11 79 14 79 15 79 18 79 22 
79 27 79 33 79 41 79 51 79 65 79 84 79 109 79 144 
79 191 79 257 742 1217 51 MP stroke
gr

c8
0 sg
2055  230 mt 
(node values over time) s
 410 2413 mt  -90 rotate
(node values) s
90 rotate
2378 4143 mt 
(iteration k) s

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF

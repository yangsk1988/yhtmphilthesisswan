#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\use_default_options true
\begin_modules
eqs-within-sections
figs-within-sections
tabs-within-sections
theorems-ams-bytype
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding ascii
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 12
\spacing onehalf
\use_hyperref true
\pdf_bookmarks true
\pdf_bookmarksnumbered true
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 2
\pdf_breaklinks false
\pdf_pdfborder false
\pdf_colorlinks false
\pdf_backref false
\pdf_pdfusetitle true
\papersize default
\use_geometry true
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 4cm
\topmargin 3cm
\rightmargin 2.5cm
\bottommargin 3cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes true
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\author 5862369 "HT" 
\author 5863457 "ht" 
\end_header

\begin_body

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:Conclusion-and-Future"

\end_inset

Conclusion and Future Work
\end_layout

\begin_layout Standard
This section gives a summary of this thesis and direction for future research.
\end_layout

\begin_layout Subsection
Conclusion
\change_inserted 5862369 1353536074

\end_layout

\begin_layout Standard
In this thesis, at first asymptotic and non-asymptotic DAC algorithms are
 reviewed.
 The asymptotic algorithms
\change_deleted 5862369 1354147985
, including first order DAC and higher order DAC,
\change_unchanged
 are robust against topology changes
\change_deleted 5862369 1354148155
.
 The 
\change_inserted 5862369 1354148198
 and their 
\change_unchanged
optimization 
\change_deleted 5862369 1354148161
of these algorithms 
\change_inserted 5862369 1354148161
 
\change_unchanged
needs to know the network topology, which is very diffcult to obtain for
 any individual node and can not change during the optimization.
 Non-asymptotic algorithms
\change_deleted 5862369 1354148041
, such as the finite-time DAC or adaptive filter DAC algorithm, they
\change_unchanged
 can find the average faster
\change_deleted 5862369 1355074897
 than the asymptotic algorithms 
\change_inserted 5862369 1355074897
 
\change_unchanged
in a time-invariant network.

\change_deleted 5862369 1354148366
 
\change_inserted 5862369 1354148371
They use a finite impulse response filter to estimate the consensus value.
 
\change_unchanged
However,
\change_inserted 5862369 1354148622
 the filter estimation is not reliable and will be interrupted once the
 topology is changed, because outdated information will lead to a wrong
 answer of the filter.
 
\change_unchanged
Therefore, to choose the suitable DAC algorithm, it depends on the network
 properties.
 
\change_inserted 5862369 1354148423

\end_layout

\begin_layout Standard

\change_deleted 5862369 1354148680
In a time-invariant network,
\change_unchanged
 
\change_deleted 5862369 1354148680
finite-time DAC algorithm is the fastest in these algorithms.
  The estimation method of the filter is also provided by the adaptive filter
 DAC algorithm.
 In the dynamic network, the filter estimation is not reliable as outdated
 information due to topology changes will lead to a wrong answer of the
 filter.
 Therefore, only asymptotic algorithms can be used in this scenario.
\change_unchanged

\end_layout

\begin_layout Standard
Second, in section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Finite-time-Consensus-on"

\end_inset

, a 
\change_inserted 5862369 1354148719
generalized 
\change_unchanged
finite-time DAC algorithm
\change_deleted 5862369 1354148726
 
\change_unchanged
 is presented.
 Compared to the previous version of finite-time DAC, the number of iteration
 can be reduced to 
\begin_inset Formula $2n$
\end_inset

, where 
\begin_inset Formula $n$
\end_inset

 is the number of nodes in the network.
 In addition, the 
\change_deleted 5862369 1354148800
Laplacian
\change_unchanged
 eigenvalues 
\change_inserted 5862369 1354148826
of the associated weight matrix 
\change_unchanged
are not required prior to the algorithm.
 Actully, the number of iterations can be further reduced to the number
 of distinct eigenvalues of the
\change_inserted 5862369 1354148828
 associated
\change_unchanged
 weight matrix.
 
\end_layout

\begin_layout Standard

\change_deleted 5862369 1354148940
It seems impossible to find an algorithm that not only robust against topology
 changes but also as fast as the generalized finite-time DAC in a distributed
 and dynamic network.
 Therefore, a tradeoff between speed and robustness is inevitable.
 Some further algorithm could be obtained based on the generalized finite-time
 DAC algorithm.
 
\change_unchanged

\end_layout

\begin_layout Standard
Third, in chapter 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Online-Optimization-of"

\end_inset

, 
\change_inserted 5862369 1354151097
we proposed a distributed real-time optimization method to increase the
 convergence rate of asymptotic DAC algorithms.

\change_unchanged
 
\change_inserted 5862369 1354151662
As stated in chapter 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Online-Optimization-of"

\end_inset

, the optimal parameters is only related to eigenvalues of the Laplacian
 matrix associated to the network.
 Therefore, the key of the optimization algorithm is to distributively estimate
 the eigenvalues.
 
\change_deleted 5862369 1354151699
so it is not robust against topology changes.
 
\change_unchanged
 However, numerical errors of these parameters due to quantization can decline
 the algorithm performance.
 To mitigate this effect, we introduce a numerical technique to find the
 least mean square solution.
 If floating point number in double format is used and the network size
 is smaller than 32 nodes, the numerical errors of estimated parameters
 after mitigation will only slightly declines the performance of 
\change_inserted 5862369 1354152399
higher-order DAC
\change_unchanged
.
 
\change_deleted 5862369 1354152401
first order DAC and second order DAC.
 Even for the third order DAC, estimated parameters by incomplete Laplacian
 spectrum is still convergent and the algorithm is faster than second order.
  However,
\change_unchanged
 Otherwise, the numerical errors will be too large even after mitigation.
 
\change_deleted 5862369 1354152227
These findings indicate that the proposed method is applicable to optimize
 higher order DAC algorithms when network size is small.
  The second-order consensus algorithm could be an option as it requires
 fewer parameters, converges faster than FO-DAC and maintains convergence
 reliability.
 
\change_inserted 5862369 1354152243
 
\change_unchanged
Generally, optimized parameters for the old network are
\change_deleted 5862369 1354152255
 
\change_unchanged
 not optimal or even not located in the convergence region for the new network.
 So the DAC algorithm must be reinitialized with convergent parameters to
 continue the consensus process, until the network topology is stable for
 a certain time and the optimal parameters are estimated
\change_deleted 5862369 1354152369
 by the proposed optimization method
\change_unchanged
.
 
\end_layout

\begin_layout Standard
Finally, we introduced a distributed detection of cloud plume using wireless
 sensor networks and the DAC algorithm in chapter 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:DAC-Implementation:-Distributed"

\end_inset

.
 First, the hypothesis testing based on the ML or MAP decision rule is introduce
d.
 In the outdoor environment, signal of an individual sensor might be corrupted
 by Gaussian noise or moving object with high reflect coefficient, which
 might raise the false alarm.
 Because multiple sensors detection have better performance, it was adopted
 in the cloud detection.

\change_deleted 5862369 1353529921
 
\change_unchanged
 Expectation-maximization algorithm is used here to build the joint Gaussian
 model of background noise and cloud backscatter.
 Thus, interferences to a few sensors in the network are less likely to
 raise the false alarm.
 Second, 
\change_inserted 5862369 1353529824
if 
\change_unchanged
we assume sensors signals are independent, the global log likelihood ratio
 in the hypothesis testing 
\change_deleted 5862369 1353453080
is
\change_inserted 5862369 1353529824
can be
\change_unchanged
 calculated by the DAC algorithm.
 
\change_deleted 5862369 1353452979
 assuming sensors signals are independent
\change_unchanged
,
\change_deleted 5862369 1353452900
 global log likelihood ratio is the average of local log likelihood ratio.

\change_unchanged
 
\change_deleted 5862369 1353452999
each sensor calculate the local log likelihood ratio and substitute it into
 the DAC iteration as the initial local value.
 Once the algorithm converges, the global log likelihood ratio is available
 to each sensor.
 
\change_unchanged

\end_layout

\begin_layout Subsection
Future Work
\change_inserted 5863457 1353890926

\end_layout

\begin_layout Standard
In this thesis, we introduced several DAC algorithms.
 
\change_deleted 5862369 1354061759
and the application of DAC in cloud detection.
 
\change_unchanged
 It seems to be impossible to find an algorithm robust against topology
 changes and faster than finite-time DAC in a distributed and dynamic network.
 It is very demanding for any individual node to know the network topology
\change_inserted 5862369 1354061913
.
 
\end_layout

\begin_layout Standard
Therefore,
\change_deleted 5862369 1354062067
 
\change_unchanged
 further research could be carried out to optimize the existing algorithms
 and make some modifications according to the applications.
\end_layout

\begin_layout Standard
First, the distributed real-time
\change_inserted 5862369 1353536737
 optimization to DAC can be applied
\change_unchanged
 on a distributed system
\change_inserted 5862369 1353536737
.

\change_unchanged
 Before that, a consensus protocol should be 
\change_inserted 5862369 1353536737
develop 
\change_unchanged
and implemented
\change_inserted 5862369 1353536737
.
 
\change_unchanged
We are supposed to deal with s
\change_inserted 5862369 1353536737
ome of the problems in practice, such as link failure, channel noise, time-delay
\change_unchanged
 and asynchronous 
\change_inserted 5862369 1353536737
communication.
 
\change_unchanged

\end_layout

\begin_layout Standard

\change_deleted 5862369 1354057424
Second, some other DAC algorithm can be developed, but it seems to be very
 difficult in when node don't know the network topoloby.
 The better way is to optimize the existing algorithm instead of finding
 new algorithms.
\change_unchanged

\end_layout

\begin_layout Standard
Second, the distributed real-time optimization to DAC might be able to applied
 in a dynamic network.

\change_inserted 5862369 1354151551
 
\change_deleted 5862369 1354064775
 because distributed real-time optimization is not robust against network
 topology changes, it may have problems in dynamic network.

\change_unchanged
 
\change_inserted 5862369 1354057175
As stated in chapter 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Online-Optimization-of"

\end_inset

, 
\change_unchanged
the optimal parameters is only related to eigenvalue
\change_inserted 5862369 1354064878
s of the Laplacian matrix associated to the network
\change_unchanged
.
 Therefore, optimized parameters for the old network are usually not optimal
 or not located in the convergence region for the new network.
 However, simulation result shows that constant first-order DAC algorithm
 and second-order DAC algorithm can maintain the convergence in most of
 the time, even old parameters are used.
 Some research should be carried out to find out the conditions to maintain
 the convergence.
 
\end_layout

\begin_layout Standard
Third, to avoid complex analysis, the network graph is assumed to be symmetric
 in the analysis.
 However, some algorithm, such as the finite-time DAC algorithm and the
 eigenvalue estimation algorithm, can be generalized to the case when the
 network in unsymmetrical.
 Therefore, the distributed real-time optimization might able to be generalized
 the unsymmetrical network.
 
\end_layout

\begin_layout Standard
Finally, 
\change_inserted 5862369 1354064680
for the application of cloud detection, the cloud model is going to be extended
 to capture the correlation and random properties of the cloud plume.
 As a result,
\change_unchanged
 
\change_inserted 5862369 1354063144
some parameters of cloud plume will be treated as random variable, 
\change_unchanged
the DAC algorithm 
\change_inserted 5862369 1354063096
need to be modified to
\change_unchanged
 
\change_inserted 5862369 1354063151
capture these changes.
 
\change_deleted 5862369 1354064703
the correlation of detections of nodes can be used to improve the performance
 of the cloud detection.
 If sensors are are located in short distance in the plume, their detections
 are correlated.
 In addition, interference due to Gaussian noise or moving object has very
 low correlation between sensors.
 Therefore, correlation can be an important property of the cloud plume.
 Besides, a modified Gaussian plume model need to be developed to capture
 the mean value, variance and correlation of the concentration at different
 position.
 Second, the parameters of cloud plume should be should be treated as unknown
 random variable, such as the position of the plume, the diffusion coefficient,
 wind speed and so on.

\change_unchanged
 At the same time
\change_inserted 5862369 1354064711
,
\change_unchanged
 sensors need to be able to estimate these parameters from their observation.
 
\change_inserted 5862369 1354064724

\end_layout

\begin_layout Section
Acknowledgment
\end_layout

\begin_layout Standard
(todo)
\end_layout

\begin_layout Standard
I thanks to my two supervisors Dr.Wang and Prof.Choi who give me lots of useful
 ideas and suggestions.
 Without your help, the thesis could not be finished within this time.
 
\end_layout

\begin_layout Standard
Also thanks to my father and mother, your encouragment during the pursuing
 of this degree is the power of my heart to conquer all the difficulties.
\end_layout

\begin_layout Standard
Thanks to the sponsor too.
\end_layout

\end_body
\end_document

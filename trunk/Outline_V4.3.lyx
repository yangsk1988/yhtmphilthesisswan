#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\use_default_options true
\begin_modules
eqs-within-sections
figs-within-sections
tabs-within-sections
theorems-ams
theorems-sec
theorems-ams-extended
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding ascii
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 12
\spacing onehalf
\use_hyperref true
\pdf_bookmarks true
\pdf_bookmarksnumbered true
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 2
\pdf_breaklinks false
\pdf_pdfborder false
\pdf_colorlinks false
\pdf_backref false
\pdf_pdfusetitle true
\papersize default
\use_geometry true
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 4cm
\topmargin 3cm
\rightmargin 2.5cm
\bottommargin 3cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\author 5862369 "HT" 
\author 5863457 "ht" 
\end_header

\begin_body

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand include
filename "C1_Introduction.lyx"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand include
filename "C2_ConsensusProblem_onGraph.lyx"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand include
filename "C3_AsymptoticDAC.lyx"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand include
filename "C2.5_Simple Finite-time_DCA.lyx"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand include
filename "C2.2_Graph&MatrixTheory.lyx"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand include
filename "C4_Finite-timeDCA_V2.lyx"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand include
filename "C5_ConsensusBasedSignalProcessing.lyx"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand include
filename "C6_CloudDetection_V2.lyx"

\end_inset


\end_layout

\begin_layout Section
Conclusion and Future Work
\end_layout

\begin_layout Standard
(todo)
\end_layout

\begin_layout Subsection
Conclusion
\change_inserted 5862369 1353536074

\end_layout

\begin_layout Standard
In this thesis, we first reviewed several DAC algorithms, including asymptotic
 DAC, finite-time and adaptive filter DAC, 
\change_deleted 5862369 1353533017
also
\change_inserted 5862369 1353533029
 as well as
\change_unchanged
 some acceleration techniques
\change_deleted 5862369 1353533022
 are reviewed
\change_unchanged
.
 The optimization of these algorithms needs to know the topology of the
 network and the network can not changes during the optimization.
 Actually, based on the same assumption, the finite-time DAC or adaptive
 filter DAC to can find the average in less time, after a non-optimized
 first order DAC iterated for a certain steps.
 
\end_layout

\begin_layout Standard
Second, we presented 
\change_deleted 5862369 1353533080
a
\change_inserted 5862369 1353533083
the
\change_unchanged
 finite-time DAC on generalized condition in section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Finite-time-Consensus-on"

\end_inset

.
 Compared to the previous version of finite-time DAC, the iterations of
 first order DAC is reduced to 
\begin_inset Formula $2n$
\end_inset

, where 
\begin_inset Formula $n$
\end_inset

 is the number of nodes in the network.
 It doesn't require the eigenvalues to be known prior to the algorithm.
 However, the number of iterations can not be decreased, because the minimum
 number of iterations is depends on the weight matrix, which is the same
 as the previous finite-time DAC.
 With this improvement, some further algorithm could be obtained.
\end_layout

\begin_layout Standard
Third, in chapter 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Online-Optimization-of"

\end_inset

, we introduced a distributed optimization method for DAC, which try to
 estimate the necessary optimal parameters.
 However, numerical error of these parameters due to quantization and eigenvalue
s missing can dramatically decline the algorithm performance.
 To mitigate the effect, we introduce some techniques.
 After the mitigation, numerical error of estimated parameters only decline
 the performance of first order DAC and second order DAC slightly.
 Even for the higher order DAC, estimated parameters by incomplete Laplacian
 spectrum is still convergent and the algorithm is faster than second order.
 However, there is a limit of this mitigation.
 Increasing the number of equations does not always make the result more
 accurate after a certain limit.
 These findings indicate that the proposed method is applicable to optimization
 of higher order DAC algorithms.
 If the numerical error is too large even after mitigation, we should decreasing
 the order of DAC or increasing the accuracy of the float number.
 
\end_layout

\begin_layout Standard
Finally, we introduced a distributed detection of cloud plume using wireless
 sensor networks and the DAC algorithm in chapter 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:DAC-Implementation:-Distributed"

\end_inset

.
 First, the hypothesis testing based on the ML or MAP decision rule is introduce
d.
 In the outdoor environment, signal of an individual sensor might be corrupted
 by Gaussian noise or moving object with high reflect coefficient, which
 might raise the false alarm.
 Because multiple sensors detection have better performance, it was adopted
 in the cloud detection.

\change_deleted 5862369 1353529921
 
\change_unchanged
 Expectation-maximization algorithm is used here to build the joint Gaussian
 model of background noise and cloud backscatter.
 Thus, interferences to a few sensors in the network are less likely to
 raise the false alarm.
 Second, 
\change_inserted 5862369 1353529824
if 
\change_unchanged
we assume sensors signals are independent, the global log likelihood ratio
 in the hypothesis testing 
\change_deleted 5862369 1353453080
is
\change_inserted 5862369 1353529824
can be
\change_unchanged
 calculated by the DAC algorithm.

\change_deleted 5862369 1353452979
 assuming sensors signals are independent
\change_unchanged
,
\change_deleted 5862369 1353452900
 global log likelihood ratio is the average of local log likelihood ratio.

\change_unchanged
 
\change_deleted 5862369 1353452999
each sensor calculate the local log likelihood ratio and substitute it into
 the DAC iteration as the initial local value.
 Once the algorithm converges, the global log likelihood ratio is available
 to each sensor.
 
\change_unchanged

\end_layout

\begin_layout Standard

\change_inserted 5863457 1353890951
in the invariant network,
\change_unchanged

\end_layout

\begin_layout Standard
(todo something could be put into conclusion and introduction)
\end_layout

\begin_layout Standard
In this thesis, 
\change_inserted 5862369 1353536271
we reviewed some DAC algorithms, 
\change_unchanged
they can be categorized in to asymptotic and non-asymptotic algorithms.
 As stated before, the asymptotic algorithms, including first order DAC
 and higher order DAC, are robust against topology changes.
 On the other hand, for non-asymptotic algorithms, such as finite-time DAC
 and adaptive filter DAC algorithm, although they can find the average much
 faster than asymptotic algorithms in a time-invariant network, they must
 be restarted once topology is changed.
 
\end_layout

\begin_layout Standard
Therefore, to choose a better DAC algorithm, depend on the network properties.
 In a time-invariant network, all these DAC algorithms can work.
 But generalized finite-time DAC algorithm is fastest in these algorithms.
 The number of iteration is less or equal than 2
\begin_inset Formula $n$
\end_inset

, where 
\begin_inset Formula $n$
\end_inset

 is the network size.
 It requires a filter to estimate the consensus value which can be calculated
 by the same method provided by adaptive filter DAC algorithm.
 However, in the dynamic network, the filter estimation is not reliable,
 as outdated information before the change will lead to a wrong answer of
 the filter.
 
\end_layout

\begin_layout Standard
It seems impossible to find an algorithm that not only robust against topology
 changes but also as fast as the finite-time DAC.
 Therefore, in a distributed and dynamic network, a tradeoff between speed
 and robustness is inevitable.
 
\end_layout

\begin_layout Standard
To find a faster DAC algorithm in distributed and dynamic network, we proposed
 a distributed real-time optimization method to increase the convergence
 rate of asymptotic DAC algorithms.
 Actually, the optimization algorithm itself is non-asymptotic so it is
 not robust against topology changes.
 The old optimized parameters might not located in the convergence region
 for the new network topology.
 So the DAC algorithm must be reinitialized with convergent parameters to
 continue the consensus process.
 If the network topology can be invariant in a certain time, the optimal
 parameters can be estimated by the proposed optimization method.
 
\end_layout

\begin_layout Subsection
Future Work
\change_inserted 5863457 1353890926

\end_layout

\begin_layout Standard
In this thesis, we introduced several DAC algorithms.
 
\change_deleted 5862369 1354061759
and the application of DAC in cloud detection.
 
\change_unchanged
 It seems to be impossible to find an algorithm robust against topology
 changes and faster than finite-time DAC in a distributed and dynamic network.
 It is very demanding for any individual node to know the network topology
\change_inserted 5862369 1354061913
.
 
\end_layout

\begin_layout Standard
Therefore,
\change_deleted 5862369 1354062067
 
\change_unchanged
 further research could be carried out to optimize the existing algorithms
 and make some modifications according to the applications.
\end_layout

\begin_layout Standard
First, the distributed real-time
\change_inserted 5862369 1353536737
 optimization to DAC can be applied
\change_unchanged
 on a distributed system
\change_inserted 5862369 1353536737
.

\change_unchanged
 Before that, a consensus protocol should be 
\change_inserted 5862369 1353536737
develop 
\change_unchanged
and implemented
\change_inserted 5862369 1353536737
.
 
\change_unchanged
We are supposed to deal with s
\change_inserted 5862369 1353536737
ome of the problems in practice, such as link failure, channel noise, time-delay
\change_unchanged
 and asynchronous 
\change_inserted 5862369 1353536737
communication.
 
\change_unchanged

\end_layout

\begin_layout Standard

\change_deleted 5862369 1354057424
Second, some other DAC algorithm can be developed, but it seems to be very
 difficult in when node don't know the network topoloby.
 The better way is to optimize the existing algorithm instead of finding
 new algorithms.
\change_unchanged

\end_layout

\begin_layout Standard
Second, the distributed real-time optimization to DAC might be able to generaliz
e to dynamic network.

\change_deleted 5862369 1354064775
  because distributed real-time optimization is not robust against network
 topology changes, it may have problems in dynamic network.

\change_unchanged
 
\change_inserted 5862369 1354057175
As stated in chapter 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Online-Optimization-of"

\end_inset

, 
\change_unchanged
the optimal parameters is only related to eigenvalue
\change_inserted 5862369 1354064878
s of the Laplacian matrix associated to the network
\change_unchanged
.
 Therefore, optimized parameters for the old network are usually not optimal
 or not located in the convergence region for the new network.
 However, simulation result shows that constant first-order DAC algorithm
 and second-order DAC algorithm can maintain the convergence in most of
 the time, even old parameters are used.
 Some research should be carried out to find out the conditions to maintain
 the convergence.
 
\end_layout

\begin_layout Standard
Third, to avoid complex analysis, the network graph is assumed to be symmetric
 in the analysis.
 However, some algorithm, such as the finite-time DAC algorithm and the
 eigenvalue estimation algorithm, can be generalized to the case when the
 network in unsymmetrical.
 Therefore, the distributed real-time optimization might able to be generalized
 the unsymmetrical network.
 
\end_layout

\begin_layout Standard
Finally, 
\change_inserted 5862369 1354064680
for the application of cloud detection, the cloud model is going to be extended
 to capture the correlation and random properties of the cloud plume.
 As a result,
\change_unchanged
 
\change_inserted 5862369 1354063144
some parameters of cloud plume will be treated as random variable, 
\change_unchanged
the DAC algorithm 
\change_inserted 5862369 1354063096
need to be modified to
\change_unchanged
 
\change_inserted 5862369 1354063151
capture these changes.
 
\change_deleted 5862369 1354064703
the correlation of detections of nodes can be used to improve the performance
 of the cloud detection.
 If sensors are are located in short distance in the plume, their detections
 are correlated.
 In addition, interference due to Gaussian noise or moving object has very
 low correlation between sensors.
 Therefore, correlation can be an important property of the cloud plume.
 Besides, a modified Gaussian plume model need to be developed to capture
 the mean value, variance and correlation of the concentration at different
 position.
 Second, the parameters of cloud plume should be should be treated as unknown
 random variable, such as the position of the plume, the diffusion coefficient,
 wind speed and so on.

\change_unchanged
 At the same time
\change_inserted 5862369 1354064711
,
\change_unchanged
 sensors need to be able to estimate these parameters from their observation.
 
\change_inserted 5862369 1354064724

\end_layout

\begin_layout Section
Acknowledgment
\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
bibfiles "D:/Dropbox/Citation_DS/EigenValueEstimation,D:/Dropbox/Citation_DS/DistributedConsensus,D:/Dropbox/Citation_DS/Consensus_Finte-Time,D:/Dropbox/Citation_DS/Consensus&Filter,D:/Dropbox/Citation_DS/WirelessSensorNetwork,D:/Dropbox/Citation_DS/SmokeAnimation,D:/Dropbox/Citation_DS/Smoke_Gas_Detection,D:/Dropbox/Citation_DS/PlumeDetection,D:/Dropbox/Citation_DS/GaussianPlumeModel,D:/Dropbox/Citation_DS/DataFusion,D:/Dropbox/Citation_DS/CloudDetection,D:/Dropbox/Citation_DS/Lidar"
options "IEEEtran"

\end_inset


\end_layout

\end_body
\end_document
